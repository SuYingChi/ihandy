<?xml version="1.0" encoding="utf-8"?>
<resources>
    <declare-styleable name="CustomFontTextView">
        <attr name="fancyfont" format="string" />
    </declare-styleable>
    <declare-styleable name="CirclePageIndicator">
        <attr name="indicator_spacing" format="dimension" />
        <attr name="indicator_type" format="enum">
            <enum name="circle" value="0" />
            <enum name="fraction" value="1" />
        </attr>
    </declare-styleable>

    <declare-styleable name="AnimationLayout">
        <attr name="enableClickScaleAnim" format="boolean" />
    </declare-styleable>

    <!--<declare-styleable name="SectorProgressView">-->
        <!--<attr name="sector_progress_fgColor" format="color" />-->
        <!--<attr name="sector_progress_percent" format="integer"/>-->
        <!--<attr name="sector_progress_startAngle" format="integer"/>-->
        <!--<attr name="sector_progress_isSquare" format="boolean"/>-->
        <!--<attr name="sector_progress_corners_radius" format="dimension"/>-->
    <!--</declare-styleable>-->

    <declare-styleable name="SectorProgressView">
        <attr name="spv_bg_color" format="color" />
        <attr name="spv_corner_radius" format="dimension|reference" />
        <attr name="spv_percent" format="integer" />
        <attr name="spv_gap_width_of_radius_percent" format="integer" />
        <attr name="spv_sector_radius_percent" format="integer" />
    </declare-styleable>

    <declare-styleable name="MediaView">
        <attr name="supportSmoothScroll" format="boolean" />
        <attr name="backgroundRadius" format="dimension" />
    </declare-styleable>

    <declare-styleable name="RoundedCornerLayout">
        <attr name="rcl_corner_radius" format="dimension"/>
    </declare-styleable>
    <declare-styleable name="InsettableFrameLayout_Layout">
        <attr name="layout_ignoreInsets" format="boolean" />
    </declare-styleable>


    <declare-styleable name="HorizontalBannerImageView">
        <attr name="aspectRatioOverride" format="float" />
        <attr name="scaleType" format="integer" />
    </declare-styleable>

    <declare-styleable name="RoundCornerImageView">
        <attr name="round_left_top_corner_radius" format="dimension" />
        <attr name="round_right_top_corner_radius" format="dimension" />
        <attr name="round_left_bottom_corner_radius" format="dimension" />
        <attr name="round_right_bottom_corner_radius" format="dimension" />
        <attr name="round_border_width" format="dimension" />
        <attr name="round_border_color" format="color" />
        <attr name="round_oval" format="boolean" />
        <attr name="android:scaleType" />
    </declare-styleable>

    <declare-styleable name="TypefacedTextView">
        <attr name="typeface" format="reference" />
        <attr name="font_style" format="enum">
            <enum name="normal" value="0" />
            <enum name="bold" value="1" />
            <enum name="italic" value="2" />
            <enum name="bold_italic" value="3" />
        </attr>

        <attr name="drawable_width" format="dimension" />
        <attr name="drawable_height" format="dimension" />
    </declare-styleable>

    <declare-styleable name="FixedRatioLayout">
        <attr name="aspectRatio" format="float" />
    </declare-styleable>

    <style name="WallpaperLoadingDialogTheme" parent="android:Theme.Dialog">
        <item name="android:windowFrame">@null</item>       <!-- Dialog的windowFrame框为无 -->
        <item name="android:windowBackground">@color/transparent_progress_dialog</item> <!-- 设置dialog的背景 -->
        <item name="android:windowNoTitle">true</item>      <!-- 是否显示title -->
        <item name="android:windowIsTranslucent">true</item>    <!-- 是否半透明 -->
        <item name="android:windowIsFloating">true</item>       <!-- 是否浮现在activity之上 -->
        <item name="android:windowContentOverlay">@null</item>  <!-- 也是个 drawable，定义 content overlay 的背景 -->
        <item name="android:backgroundDimEnabled">false</item>  <!-- 背景是否模糊显示 -->
    </style>

    <declare-styleable name="LoadingProgressBar">
        <attr name="prepareCircleRadius" format="dimension" />
        <attr name="loadingCircleRadius" format="dimension" />
        <attr name="prepareCircleDistance" format="dimension" />
        <attr name="loadingCircleDistance" format="dimension" />
        <attr name="loadingCircleVibrateRange" format="dimension" />
        <attr name="shouldPrepare" format="boolean" />
    </declare-styleable>

    <declare-styleable name="ViewPagerIndicator">
        <attr name="ci_width" format="dimension"/>
        <attr name="ci_height" format="dimension"/>
        <attr name="ci_margin" format="dimension"/>
        <attr name="ci_animator" format="reference"/>
        <attr name="ci_animator_reverse" format="reference"/>
        <attr name="ci_drawable_checked" format="reference"/>
        <attr name="ci_drawable_normal" format="reference"/>

        <attr name="ci_orientation" format="enum">
            <!-- Defines an horizontal widget. -->
            <enum name="horizontal" value="0"/>
            <!-- Defines a vertical widget. -->
            <enum name="vertical" value="1"/>
        </attr>

        <attr name="ci_gravity">
            <!-- Push object to the top of its container, not changing its size. -->
            <flag name="top" value="0x30"/>
            <!-- Push object to the bottom of its container, not changing its size. -->
            <flag name="bottom" value="0x50"/>
            <!-- Push object to the left of its container, not changing its size. -->
            <flag name="left" value="0x03"/>
            <!-- Push object to the right of its container, not changing its size. -->
            <flag name="right" value="0x05"/>
            <!-- Place object in the vertical center of its container, not changing its size. -->
            <flag name="center_vertical" value="0x10"/>
            <!-- Grow the vertical size of the object if needed so it completely fills its container. -->
            <flag name="fill_vertical" value="0x70"/>
            <!-- Place object in the horizontal center of its container, not changing its size. -->
            <flag name="center_horizontal" value="0x01"/>
            <!-- Grow the horizontal size of the object if needed so it completely fills its container. -->
            <flag name="fill_horizontal" value="0x07"/>
            <!-- Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. -->
            <flag name="center" value="0x11"/>
            <!-- Grow the horizontal and vertical size of the object if needed so it completely fills its container. -->
            <flag name="fill" value="0x77"/>
            <!-- Additional option that can be set to have the top and/or bottom edges of
            the child clipped to its container's bounds.
            The clip will be based on the vertical gravity: a top gravity will clip the bottom
            edge, a bottom gravity will clip the top edge, and neither will clip both edges. -->
            <flag name="clip_vertical" value="0x80"/>
            <!-- Additional option that can be set to have the left and/or right edges of
            the child clipped to its container's bounds.
            The clip will be based on the horizontal gravity: a left gravity will clip the right
            edge, a right gravity will clip the left edge, and neither will clip both edges. -->
            <flag name="clip_horizontal" value="0x08"/>
            <!-- Push object to the beginning of its container, not changing its size. -->
            <flag name="start" value="0x00800003"/>
            <!-- Push object to the end of its container, not changing its size. -->
            <flag name="end" value="0x00800005"/>
        </attr>

    </declare-styleable>
</resources>
